{"version":3,"sources":["app/components/http-service/http-service.js","app/components/card/Card.jsx","app/components/catalog/Catalog.jsx","app/components/footer/Footer.jsx","app/App.jsx","serviceWorker.js","index.js"],"names":["HTTPService","Object","classCallCheck","this","createClass","key","value","url","successCallBack","errorCallBack","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","parseData","JSON","parse","response","data","setRequestHeader","stringify","Card","_React$Component","_this","possibleConstructorReturn","getPrototypeOf","call","getDetails","bind","assertThisInitialized","addToWishlist","state","isCardFocus","isAddToWishlistChecked","arrayActionButtons","title","href","inherits","setState","oldState","newState","assign","_this$props","props","name","description","imgUrl","price","_id","cardImage","backgroundImage","concat","classNamesForCardContent","classNamesForButtonAddToWishlist","setTimeout","actionButtons","map","button","i","react","className","id","onClick","style","aria-label","aria-hidden","aria-pressed","React","Catalog","httpService","products","_this2","get","product","e","console","log","Card_Card","Footer","App","react_default","a","createElement","Catalog_Catalog","Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d41851f9.chunk.js","sourcesContent":["export class HTTPService {\r\n    get(url, successCallBack, errorCallBack) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.send();\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    const parseData = JSON.parse(xhr.response);\r\n                    successCallBack(parseData);\r\n                } else {\r\n                    errorCallBack(xhr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    post(url, data, successCallBack, errorCallBack) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', url);\r\n\r\n        xhr.setRequestHeader('content-type', 'application/json');\r\n        xhr.send((typeof data !== 'string') ? JSON.stringify(data) : data);\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    const parseData = JSON.parse(xhr.response);\r\n                    successCallBack(parseData);\r\n                } else {\r\n                    errorCallBack(xhr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    delete(url, successCallBack, errorCallBack) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('DELETE', url);\r\n\r\n        xhr.send();\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    const parseData = JSON.parse(xhr.response);\r\n                    successCallBack(parseData);\r\n                } else {\r\n                    errorCallBack(xhr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport './Card.scss';\r\n\r\nexport class Card extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getDetails = this.getDetails.bind(this);\r\n        this.addToWishlist = this.addToWishlist.bind(this);\r\n        this.state = {\r\n            isCardFocus: false,\r\n            isAddToWishlistChecked: false,\r\n            arrayActionButtons: [\r\n                {\r\n                    title: 'view more',\r\n                    href: ''\r\n                },\r\n                {\r\n                    title: 'buy',\r\n                    href: ''\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n    getDetails() {\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.isCardFocus = !oldState.isCardFocus;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    addToWishlist() {\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.isAddToWishlistChecked = !oldState.isAddToWishlistChecked;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, description, imgUrl, price, _id } = this.props;\r\n\r\n        const cardImage = {\r\n            backgroundImage: `url(${imgUrl})`\r\n        }\r\n\r\n        let classNamesForCardContent = \"card__content mdc-card__primary-action mdc-ripple-upgraded \"\r\n        let classNamesForButtonAddToWishlist = \"action__add-to-wishlist mdc-icon-button \";\r\n\r\n        if (this.state.isCardFocus) {\r\n            classNamesForCardContent += \"mdc-ripple-upgraded--background-focused mdc-ripple-upgraded--foreground-activation\";\r\n            setTimeout(this.getDetails, 250);\r\n        }\r\n\r\n        if (this.state.isAddToWishlistChecked) {\r\n            classNamesForButtonAddToWishlist += \"mdc-icon-button--on\";\r\n        }\r\n\r\n        const actionButtons = this.state.arrayActionButtons.map((button, i) => {\r\n            return <button key={i} className=\"action__btn mdc-button\">\r\n                {button.title}\r\n            </button>\r\n        });\r\n\r\n        return <div id={_id} className=\"card\">\r\n            <div className={classNamesForCardContent} onClick={this.getDetails}>\r\n                <div className=\"card__image\" style={cardImage}></div>\r\n                <div className=\"card__text\">\r\n                    <h2 className=\"card__title\">{name}</h2>\r\n                    <div className=\"card__price\">{price}</div>\r\n                    <div className=\"card__description\">{description}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card__button\">\r\n                <div className=\"main-action\">\r\n                    {actionButtons}\r\n                </div>\r\n                <button className={classNamesForButtonAddToWishlist}\r\n                    title=\"Add to wishlist\"\r\n                    aria-label=\"Add to wishlist\"\r\n                    aria-hidden=\"true\"\r\n                    aria-pressed=\"false\"\r\n                    onClick={this.addToWishlist}>\r\n                    <i className=\"material-icons mdc-icon-button__icon mdc-icon-button__icon--on\">favorite</i>\r\n                    <i className=\"material-icons mdc-icon-button__icon\">favorite_border</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport './Catalog.scss';\r\nimport { HTTPService } from \"../http-service/http-service\";\r\nimport { Card } from '../card/Card.jsx';\r\n\r\nexport class Catalog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.httpService = new HTTPService();\r\n        this.state = {\r\n            products: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.httpService.get('http://localhost:4002/api/v1/phones', (products) => {\r\n            products = products.map((product) => {\r\n                product.imgUrl = 'http://localhost:4002/api/v1/' + product.imgUrl;\r\n                return product;\r\n            })\r\n            this.setState((oldState) => Object.assign({}, oldState, { products }));\r\n        }, (e) => {\r\n            console.log(e); //если все плохо, то приходит какой-то callback\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.products);\r\n        return <div className=\"catalog-content\">\r\n            {this.state.products.map((product, i) => <Card {...product} key={i} />)}\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport './Footer.scss';\r\n\r\nexport const Footer = () => {\r\n    return <div className=\"footer\">\r\n        <div className=\"logo\">\r\n            <div className=\"logo__icon\"></div>\r\n            <div className=\"logo__title\"></div>\r\n        </div>\r\n        <div className=\"footer__site-author\">\r\n            Create by Alina Moskalenko\r\n        </div>\r\n    </div>\r\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport { Catalog } from './components/catalog/Catalog.jsx';\nimport { Footer } from './components/footer/Footer.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App__header\"></header>\n        <aside className=\"App__aside\"></aside>\n        <main className=\"App__main\">\n          <Catalog />\n        </main>\n        <footer className=\"App__footer\">\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}