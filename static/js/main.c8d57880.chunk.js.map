{"version":3,"sources":["app/components/header/Header.jsx","app/components/global-sidebar/GlobalSidebar.jsx","app/components/http-service/http-service.js","app/components/card/Card.jsx","app/components/catalog/Catalog.jsx","app/components/footer/Footer.jsx","app/App.jsx","serviceWorker.js","index.js"],"names":["Header","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getSearchQuery","bind","assertThisInitialized","inputValueChange","onReset","state","inputValue","isInputSearchOpened","navItem","title","href","inherits","createClass","key","value","event","target","setState","oldState","newState","assign","map","item","i","react","className","type","placeholder","onChange","onKeyPress","onClick","React","GlobalSidebar","toggleMenu","isOpened","_this2","props","onChangeMode","listLink","links","link","classNames","HTTPService","url","successCallBack","errorCallBack","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","parseData","JSON","parse","response","data","setRequestHeader","stringify","Card","getDetails","addToWishlist","isCardFocus","isAddToWishlistChecked","arrayActionButtons","_this$props","name","description","imgUrl","price","_id","cardImage","backgroundImage","concat","classNamesForCardContent","classNamesForButtonAddToWishlist","setTimeout","actionButtons","button","id","style","aria-label","aria-hidden","aria-pressed","Catalog","httpService","products","get","product","e","console","log","Card_Card","Footer","App","setSidebarMode","isSidebarOpened","sidebar_links","classSectionNames","react_default","a","createElement","Header_Header","GlobalSidebar_GlobalSidebar","Catalog_Catalog","Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_app_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c8d57880.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport './Header.scss';\r\n\r\nexport class Header extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getSearchQuery = this.getSearchQuery.bind(this);\r\n        this.inputValueChange = this.inputValueChange.bind(this);\r\n        this.onReset = this.onReset.bind(this);\r\n        this.state = {\r\n            inputValue: '',\r\n            isInputSearchOpened: false,\r\n            navItem: [\r\n                {\r\n                    title: \"Catalog\",\r\n                    href: \"\",\r\n                },\r\n                {\r\n                    title: \"About us\",\r\n                    href: \"\",\r\n                },\r\n            ],\r\n        }\r\n    }\r\n\r\n    inputValueChange(event) {\r\n        const value = event.target.value;\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.inputValue = value;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    getSearchQuery(event) {\r\n        if (event.key === \"Enter\" || !event.key) {\r\n            if (this.state.inputValue) {\r\n                this.onReset();\r\n            }\r\n        }\r\n    }\r\n\r\n    onReset() {\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.inputValue = '';\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const navItem = this.state.navItem.map((item, i) => {\r\n            return <a key={i} href={item.href} className=\"nav__link\">\r\n                {item.title}\r\n            </a>\r\n        });\r\n\r\n        return <div className=\"header\">\r\n            <div className=\"header__logo\">\r\n                <div className=\"logo logo__icon\"></div>\r\n                <div className=\"logo logo__title\"></div>\r\n            </div>\r\n            <div className=\"header__wrapper\">\r\n                <div className=\"header__nav\">{navItem}</div>\r\n                <div className=\"header__action\">\r\n                    <div className=\"header__search\">\r\n                        <input type=\"text\"\r\n                            className=\"header__search-input\"\r\n                            placeholder=\"Search products\"\r\n                            onChange={this.inputValueChange}\r\n                            onKeyPress={this.getSearchQuery}\r\n                            value={this.state.inputValue} />\r\n                        <button\r\n                            className=\"header__button\"\r\n                            title=\"Search a product\">\r\n                            <i className=\"icon icon__search mdc-icon-button material-icons\"\r\n                                onClick={this.getSearchQuery}>search</i>\r\n                        </button>\r\n                    </div>\r\n                    <button className=\"header__button\"\r\n                        title=\"Sign in\">\r\n                        <i className=\"icon icon__sign mdc-icon-button material-icons\">perm_identity</i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport './GlobalSidebar.scss';\r\n\r\nexport class GlobalSidebar extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n        this.state = {\r\n            isOpened: false,\r\n        };\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.isOpened = !oldState.isOpened;\r\n            this.props.onChangeMode(newState.isOpened);\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const listLink = this.props.links.map((link, i) => {\r\n            return <a key={i} href={link.href} className=\"sidebar__link\">\r\n                {link.title}\r\n            </a>\r\n        });\r\n\r\n        let classNames = 'sidebar ';\r\n\r\n        if (this.state.isOpened) {\r\n            classNames += 'sidebar_opened';\r\n        }\r\n\r\n        return <aside className={classNames}>\r\n            <div className=\"sidebar__toggle mdc-icon-button\" onClick={this.toggleMenu}>\r\n                <div className=\"toggle__row\"></div>\r\n                <div className=\"toggle__row\"></div>\r\n                <div className=\"toggle__row\"></div>\r\n            </div>\r\n            <div className=\"sidebar__items\">\r\n                {listLink}\r\n            </div>\r\n        </aside>\r\n    }\r\n}","export class HTTPService {\r\n    get(url, successCallBack, errorCallBack) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', url);\r\n        xhr.send();\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    const parseData = JSON.parse(xhr.response);\r\n                    successCallBack(parseData);\r\n                } else {\r\n                    errorCallBack(xhr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    post(url, data, successCallBack, errorCallBack) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('POST', url);\r\n\r\n        xhr.setRequestHeader('content-type', 'application/json');\r\n        xhr.send((typeof data !== 'string') ? JSON.stringify(data) : data);\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    const parseData = JSON.parse(xhr.response);\r\n                    successCallBack(parseData);\r\n                } else {\r\n                    errorCallBack(xhr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    delete(url, successCallBack, errorCallBack) {\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('DELETE', url);\r\n\r\n        xhr.send();\r\n\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.status === 200) {\r\n                    const parseData = JSON.parse(xhr.response);\r\n                    successCallBack(parseData);\r\n                } else {\r\n                    errorCallBack(xhr);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport './Card.scss';\r\n\r\nexport class Card extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getDetails = this.getDetails.bind(this);\r\n        this.addToWishlist = this.addToWishlist.bind(this);\r\n        this.state = {\r\n            isCardFocus: false,\r\n            isAddToWishlistChecked: false,\r\n            arrayActionButtons: [\r\n                {\r\n                    title: 'view more',\r\n                    href: ''\r\n                },\r\n                {\r\n                    title: 'buy',\r\n                    href: ''\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n    getDetails() {\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.isCardFocus = !oldState.isCardFocus;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    addToWishlist() {\r\n        this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.isAddToWishlistChecked = !oldState.isAddToWishlistChecked;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, description, imgUrl, price, _id } = this.props;\r\n\r\n        const cardImage = {\r\n            backgroundImage: `url(${imgUrl})`\r\n        }\r\n\r\n        let classNamesForCardContent = \"card__content mdc-card__primary-action mdc-ripple-upgraded \"\r\n        let classNamesForButtonAddToWishlist = \"action__add-to-wishlist mdc-icon-button \";\r\n\r\n        if (this.state.isCardFocus) {\r\n            classNamesForCardContent += \"mdc-ripple-upgraded--background-focused mdc-ripple-upgraded--foreground-activation\";\r\n            setTimeout(this.getDetails, 250);\r\n        }\r\n\r\n        if (this.state.isAddToWishlistChecked) {\r\n            classNamesForButtonAddToWishlist += \"mdc-icon-button--on\";\r\n        }\r\n\r\n        const actionButtons = this.state.arrayActionButtons.map((button, i) => {\r\n            return <button key={i} className=\"action__btn mdc-button\">\r\n                {button.title}\r\n            </button>\r\n        });\r\n\r\n        return <div id={_id} className=\"card\">\r\n            <div className={classNamesForCardContent} onClick={this.getDetails}>\r\n                <div className=\"card__image\" style={cardImage}></div>\r\n                <div className=\"card__text\">\r\n                    <h2 className=\"card__title\">{name}</h2>\r\n                    <div className=\"card__price\">{price}</div>\r\n                    <div className=\"card__description\">{description}</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"card__button\">\r\n                <div className=\"main-action\">\r\n                    {actionButtons}\r\n                </div>\r\n                <button className={classNamesForButtonAddToWishlist}\r\n                    title=\"Add to wishlist\"\r\n                    aria-label=\"Add to wishlist\"\r\n                    aria-hidden=\"true\"\r\n                    aria-pressed=\"false\"\r\n                    onClick={this.addToWishlist}>\r\n                    <i className=\"material-icons mdc-icon-button__icon mdc-icon-button__icon--on\">favorite</i>\r\n                    <i className=\"material-icons mdc-icon-button__icon\">favorite_border</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import * as React from 'react';\r\nimport './Catalog.scss';\r\nimport { HTTPService } from \"../http-service/http-service\";\r\nimport { Card } from '../card/Card.jsx';\r\n\r\nexport class Catalog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.httpService = new HTTPService();\r\n        this.state = {\r\n            products: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.httpService.get('http://localhost:4002/api/v1/phones', (products) => {\r\n            products = products.map((product) => {\r\n                product.imgUrl = 'http://localhost:4002/api/v1/' + product.imgUrl;\r\n                return product;\r\n            })\r\n            this.setState((oldState) => Object.assign({}, oldState, { products }));\r\n        }, (e) => {\r\n            console.log(e); //если все плохо, то приходит какой-то callback\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"catalog-content\">\r\n            {this.state.products.map((product, i) => <Card {...product} key={i} />)}\r\n        </div>\r\n    }\r\n}\r\n","import * as React from 'react';\r\nimport './Footer.scss';\r\n\r\nexport const Footer = () => {\r\n    return <div className=\"footer\">\r\n        <div className=\"footer__logo\">\r\n            <div className=\"logo logo__icon\"></div>\r\n            <div className=\"logo logo__title\"></div>\r\n        </div>\r\n        <div className=\"footer__site-author\">\r\n            Create by Alina Moskalenko\r\n        </div>\r\n    </div>\r\n}","import React, { Component } from 'react';\nimport './App.scss';\nimport { Header } from './components/header/Header.jsx';\nimport { GlobalSidebar } from './components/global-sidebar/GlobalSidebar.jsx';\nimport { Catalog } from './components/catalog/Catalog.jsx';\nimport { Footer } from './components/footer/Footer.jsx';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.setSidebarMode = this.setSidebarMode.bind(this);\n    this.state = {\n      isSidebarOpened: false,\n      sidebar_links: [\n        {\n          title: 'Home',\n          href: 'https://www.apple.com/mac/',\n        },\n        {\n          title: 'Wish list',\n          href: 'https://www.apple.com/iphone/',\n        },\n        {\n          title: 'Basket',\n          href: 'https://www.apple.com/watch/',\n        },\n        {\n          title: 'About us',\n          href: 'https://www.apple.com/music/',\n        },\n        // {\n        //   title: 'Support',\n        //   href: 'https://support.apple.com/',\n        // },\n      ]\n    };\n  }\n\n  setSidebarMode(value) {\n    this.setState((oldState) => {\n      const newState = Object.assign({}, oldState);\n      newState.isSidebarOpened = value;\n      return newState;\n    });\n  }\n\n  render() {\n    let classSectionNames = 'app__section ';\n\n    if (this.state.isSidebarOpened) {\n      classSectionNames += ' app__section_compressed';\n    }\n\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\">\n          <Header />\n        </header>\n        <main className=\"app__main\">\n          <div className=\"app__aside\">\n            <GlobalSidebar links={this.state.sidebar_links}\n              onChangeMode={this.setSidebarMode} />\n          </div>\n          <section className={classSectionNames}>\n            <Catalog />\n          </section>\n        </main>\n        <footer className=\"app__footer\">\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './app/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}